from pydantic.dataclasses import dataclass

from .base import Base


class IntegrationAI(Base):
    async def create(self) -> None:
        """
        Creates the 'integration_ai' table in the database if it does not already exist.
        The table stores information about AI integrations, including creator ID, URL,
        authentication type, authentication credentials, and HTTP method.
        """
        await self._session.execute(
            f"""
            CREATE TABLE IF NOT EXISTS {self.get_name()} (
                id           INTEGER PRIMARY KEY AUTOINCREMENT,
                creator_id   INTEGER,
                url          TEXT NOT NULL,
                auth_type    INTEGER CHECK(auth_type IN (0, 1, 2)),
                auth_creds   TEXT,
                http_method  INTEGER CHECK(http_method IN (0, 1, 2, 3, 4))
        );
    """)

@dataclass(frozen=True)
class IntegrationAIInputDTO:
    """
    Data Transfer Object for input when creating a new IntegrationAI record.
    Does not include the 'id' field as it's auto-generated by the database.
    """
    creator_id: int | None # creator_id can be None if not associated with a specific user
    url: str
    auth_type: int # 0: No Auth, 1: Basic Auth, 2: Bearer Token
    auth_creds: str | None # Authentication credentials, can be None if no auth
    http_method: int # 0: GET, 1: POST, 2: PUT, 3: DELETE, 4: PATCH

@dataclass(frozen=True)
class IntegrationAIDTO:
    """
    Data Transfer Object representing an existing IntegrationAI record from the database.
    Includes all fields, including the auto-generated 'id'.
    """
    id: int
    creator_id: int | None
    url: str
    auth_type: int
    auth_creds: str | None
    http_method: int

    @classmethod
    def from_input(cls, row_id: int, input_dto: IntegrationAIInputDTO) -> "IntegrationAIDTO":
        """
        Creates an IntegrationAIDTO instance from an IntegrationAIInputDTO and a row ID.

        Args:
            row_id: The auto-generated ID from the database.
            input_dto: The input DTO containing the integration details.

        Returns:
            An IntegrationAIDTO instance.
        """
        return cls(id=row_id, **vars(input_dto))
